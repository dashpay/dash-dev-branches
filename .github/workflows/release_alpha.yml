name: Build and push image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git/Docker tag (without v)'
        required: true

jobs:
  build:
    name: Run Gitian build
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: dash
        ref: develop

    - name: Checkout Gitian builder
      uses: actions/checkout@v3
      with:
        repository: devrandom/gitian-builder
        path: gitian-builder

    - name: Checkout detached sigs
      uses: actions/checkout@v3
      with:
        repository: dashpay/dash-detached-sigs
        path: dash-detached-sigs

    - name: Checkout gitian sigs
      uses: actions/checkout@v3
      with:
        repository: dashpay/gitian.sigs
        path: gitian.sigs

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: dashpay/dashd
        tags: |
          type=semver,pattern={{version}},value=${{ github.event.inputs.tag }}
          type=raw,value=latest-dev
        flavor: |
          latest=false

    - name: Install apt-cacher-ng
      run: |
        sudo DEBIAN_FRONTEND=noninteractive apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-cacher-ng

    - name: Set major version environment variable
      id: major-version
      run: echo "MAJOR_VERSION=$(${{ github.event.inputs.tag }}%%.*)" >> $GITHUB_OUTPUT

    - name: Prepare Gitian
      run: dash/contrib/gitian-build.py --setup "dummy" "${{ github.event.inputs.tag }}"

    - uses: actions/cache@v3
      id: ccache
      with:
        path: /opt/actions-runner/_work/dash/dash/gitian-builder/cache/dash-linux-${{ steps.major-version.outputs.MAJOR_VERSION }}
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-ccache-

    - name: Run Gitian build
      run: |
        export GPG_TTY=$(tty)
        dash/contrib/gitian-build.py -c -b -n -D -o l \
        -u https://github.com/dashevo/dash-evo-branches \
        -j $(nproc) -m `awk '/^Mem/ {print $7}' <(free -m)` \
        dummy v${{ github.event.inputs.tag }}

    - name: Set up QEMU to run multi-arch builds
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker BuildX
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: v0.10.2
        install: true

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: ${{ github.workspace }}
        file: ./dash/contrib/containers/deploy/Dockerfile.GitHubActions.Gitian
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        build-args: |
          TAG=${{ github.event.inputs.tag }}

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
